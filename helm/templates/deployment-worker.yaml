{{- if gt (int .Values.server.workers) 0 }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "trino.worker" . }}
  labels:
    app: {{ template "trino.name" . }}
    chart: {{ template "trino.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    component: worker
    {{- if .Values.commonLabels }}
    {{- tpl (toYaml .Values.commonLabels) . | nindent 4 }}
    {{- end }}
spec:
  {{- if not .Values.server.autoscaling.enabled }}
  replicas: {{ .Values.server.workers }}
  {{- end }}
  selector:
    matchLabels:
      app: {{ template "trino.name" . }}
      release: {{ .Release.Name }}
      component: worker
  template:
    metadata:
      {{- if .Values.worker.annotations }}
      annotations:
      {{- tpl (toYaml .Values.worker.annotations) . | nindent 8 }}
      {{- end }}
      labels:
        app: {{ template "trino.name" . }}
        release: {{ .Release.Name }}
        component: worker
        {{- if .Values.worker.labels }}
        {{- tpl (toYaml .Values.worker.labels) . | nindent 8 }}
        {{- end }}
        {{- if .Values.commonLabels }}
        {{- tpl (toYaml .Values.commonLabels) . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "trino.serviceAccountName" . }}
      {{- with .Values.securityContext }}
      securityContext:
        runAsUser: {{ .runAsUser }}
        runAsGroup: {{ .runAsGroup }}
      {{- end }}
      {{- if .Values.shareProcessNamespace.worker }}
      shareProcessNamespace: {{ .Values.shareProcessNamespace.worker }}
      {{- end }}
      volumes:
        - name: config-volume
          configMap:
            name: {{ template "trino.worker" . }}
        - name: catalog-volume
          configMap:
            name: {{ template "trino.catalog" . }}
        {{- if .Values.ranger.enabled | default false }}
        - name: ranger-volume
          configMap:
            name: {{ template "trino.ranger" . }}
        {{- end }}
        - name: schemas-volume
          configMap:
            name: {{ .Release.Name }}-schemas-volume-worker
        {{- range .Values.secretMounts }}
        - name: {{ .name }}
          secret:
            secretName: {{ .secretName }}
        {{- end }}
        {{- range .Values.worker.secretMounts }}
        - name: {{ .name }}
          secret:
            secretName: {{ .secretName }}
        {{- end }}
      {{- if .Values.initContainers.worker }}
      initContainers:
      {{- tpl (toYaml .Values.initContainers.worker) . | nindent 6 }}
      {{- end }}
      imagePullSecrets:
        {{- toYaml .Values.imagePullSecrets | nindent 8 }}
      containers:
        {{- if .Values.git_sync.enabled | default false }}
        - env:
            - name: GIT_SYNC_REPO
              valueFrom:
                secretKeyRef:
                    key: GIT_DP_FLOW_URL
                    name: fiber
            - name: GIT_SYNC_BRANCH
              value: master
            - name: GIT_SYNC_ROOT
              value: /mnt/data/repo/schemas
            - name: GIT_SYNC_DEST
              value: repo
            - name: GIT_SYNC_ONE_TIME
              value: "false"
            - name: GIT_SYNC_REV
              value: HEAD
            - name: GIT_SYNC_DEPTH
              value: "1"
            - name: GIT_SYNC_WAIT
              value: "60"
            - name: GIT_SYNC_TIMEOUT
              value: "120"
            - name: GIT_SYNC_ADD_USER
              value: "true"
            - name: GIT_SYNC_MAX_SYNC_FAILURES
              value: "0"
            - name: GIT_KNOWN_HOSTS
              value: "false"
            - name: CONNECTION_CHECK_MAX_COUNT
              value: "0"
            - name: GIT_SYNC_USERNAME
              valueFrom:
                secretKeyRef:
                    key: git_user
                    name: fiber
            - name: GIT_SYNC_PASSWORD
              valueFrom:
                secretKeyRef:
                    key: git_pwd
                    name: fiber
          image: k8s.gcr.io/git-sync/git-sync:v3.2.2
          imagePullPolicy: IfNotPresent
          name: git-sync
          resources: {}
          securityContext:
            runAsUser: 0
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /mnt/data/repo/schemas
              name: git-sync
        - name: {{ .Chart.Name }}-worker
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
#          command: [ "/bin/bash", "-c" ]
#          args:
#              - "/usr/lib/trino/bin/run-trino"
          env:
            - name: RANGER_ENABLED
              value: "{{ .Values.ranger.enabled }}"
            - name: RANGER_CONFIG_PATH
              value: {{ .Values.ranger.mountPath | default "/mnt/ranger" }}
            {{- toYaml .Values.env | nindent 12 }}
          envFrom:
            {{- toYaml .Values.envFrom | nindent 12 }}
          volumeMounts:
            - mountPath: {{ .Values.server.config.mountPath }}
              name: config-volume
            - mountPath: {{ .Values.server.config.mountPath }}/catalog
              name: catalog-volume
            - mountPath: {{ .Values.kafka.mountPath }}
              name: schemas-volume
            {{- if .Values.ranger.enabled | default false }}
            - mountPath: {{ .Values.ranger.mountPath | default "/mnt/ranger" }}
              name: ranger-volume
            {{- end }}
            {{- range .Values.secretMounts }}
            - name: {{ .name }}
              mountPath: {{ .path }}
            {{- end }}
            {{- range .Values.worker.secretMounts }}
            - name: {{ .name }}
              mountPath: {{ .path }}
            {{- end }}
#            - name: trino-pvc
#              mountPath: /
            {{- with .Values.volumeMounts }}
                {{- toYaml . | nindent 12 }}
            {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          {{- range $key, $value := .Values.worker.additionalExposedPorts }}
            - name: {{ $value.name }}
              containerPort: {{ $value.port }}
              protocol: {{ $value.protocol }}
          {{- end }}
          livenessProbe:
            httpGet:
              path: /v1/info
              port: http
            initialDelaySeconds: {{ .Values.worker.livenessProbe.initialDelaySeconds | default 20 }}
            periodSeconds: {{ .Values.worker.livenessProbe.periodSeconds | default 10 }}
            timeoutSeconds: {{ .Values.worker.livenessProbe.timeoutSeconds | default 5 }}
            failureThreshold: {{ .Values.worker.livenessProbe.failureThreshold | default 6 }}
            successThreshold: {{ .Values.worker.livenessProbe.successThreshold | default 1 }}
          readinessProbe:
            httpGet:
              path: /v1/info
              port: http
            initialDelaySeconds: {{ .Values.worker.readinessProbe.initialDelaySeconds | default 20 }}
            periodSeconds: {{ .Values.worker.readinessProbe.periodSeconds | default 10 }}
            timeoutSeconds: {{ .Values.worker.readinessProbe.timeoutSeconds | default 5 }}
            failureThreshold: {{ .Values.worker.readinessProbe.failureThreshold | default 6 }}
            successThreshold: {{ .Values.worker.readinessProbe.successThreshold | default 1 }}
          resources:
            {{- toYaml .Values.worker.resources | nindent 12 }}
      {{- if .Values.sidecarContainers.worker }}
        {{- toYaml .Values.sidecarContainers.worker | nindent 8 }}
      {{- end }}
      {{- with .Values.worker.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.worker.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.worker.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
#  volumeClaimTemplates:
#  - metadata:
#        name: trino-pvc
#    spec:
#        accessModes: [ "ReadWriteOnce" ]
#        storageClassName: gp2
#        resources:
#            requests:
#                storage: 20Gi
{{- end }}
